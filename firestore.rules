rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    match /assets/{assetId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /comments/{commentId} {
      allow read: if isAuthenticated();
      
      allow create: if isAuthenticated() && (
        (request.resource.data.userRole == 'user' && request.resource.data.userId == request.auth.uid) ||
        (isAdmin() && request.resource.data.userId == 'admin')
      );
      
      allow update: if isAuthenticated() && (
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isRead']) &&
        (isAdmin() || resource.data.recipientId == request.auth.uid)
      );
    }
  }
}