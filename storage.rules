rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    function getUser() {
      return request.auth.uid != null ? 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data
        : null;
    }

    function isAdmin() {
      let user = getUser();
      return user != null && user.role == "admin";
    }

    match /profile-photos/{userId}/{filename} {
      allow read: if true;
      allow write: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }
    
    match /assets/{filename} {
      allow read: if true;
      allow write: if request.auth != null
                   && isAdmin()
                   && request.resource.size < 10 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }
  }
}
